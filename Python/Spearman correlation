''' Spearman correlation '''

# libraries
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.stats import pearsonr

# Data
data = pd.read_csv('.../Clean Data_Random Forest_61.csv')

# Selected variables

TotalCost = data['Annual Cost']
YearlyConstituent = data['Active Constituents']
Mean_incidence_of_diseased_plants = data['Mildew Incidence']
Mean_incidence_of_diseased_plants_May = data['Mildew_May']
Susceptibility_to_R6virulent_isolates = data['Susceptibility to R6 Strains']
Susceptibility_to_nonR6virulent_isolates = data['Susceptibility to nonR6 Strains']
Pruning_thoroughness = data['Pruning']
Initial_Strain = data['Initial Strain']
Degree_centrality_nonR6cultivars_MayJune = data['degree_centrality_NonR6_MayJun']
Degree_centrality_nonR6cultivars_JunJul = data['degree_centrality_NonR6_JunJul']

df = pd.DataFrame({'Annual Cost': TotalCost,
                   'Active Constituents': YearlyConstituent,
                   'Mean incidence of diseased plants': Mean_incidence_of_diseased_plants,
                   'Mean incidence of diseased plants May': Mean_incidence_of_diseased_plants_May,
                   'Susceptibility to R6-virulent isolates': Susceptibility_to_R6virulent_isolates,
                   'Susceptibility to non-R6-virulent isolates': Susceptibility_to_nonR6virulent_isolates,
                   'Pruning thoroughness': Pruning_thoroughness,
                   'Initial Strain': Initial_Strain,
                   'Degree centrality non-R6-cultivars May-June': Degree_centrality_nonR6cultivars_MayJune,
                   'Degree centrality non-R6-cultivars June-July': Degree_centrality_nonR6cultivars_JunJul,
                   })

corr = df.corr(method = 'spearman')
fig, ax = plt.subplots(figsize=(10,10)) 
sns.heatmap(corr, annot = True, fmt=".2f")
fig.autofmt_xdate(rotation=45)
plt.show()

# All variables

TotalCost = data['Annual Cost']
YearlyConstituent = data['Active Constituents']
Mean_incidence_of_diseased_plants = data['Mildew Incidence']
Mean_incidence_of_diseased_plants_Apr = data['Mildew_Apr']
Mean_incidence_of_diseased_plants_May = data['Mildew_May']
Mean_incidence_of_diseased_plants_Jun = data['Mildew_Jun']
Mean_incidence_of_diseased_plants_Jul = data['Mildew_Jul']
Mean_incidence_of_Flag_Shoot = data['FlagShoot Incidence_Dummy']
Susceptibility_to_R6virulent_isolates = data['Susceptibility to R6 Strains']
Susceptibility_to_nonR6_Strains_isolates = data['Susceptibility to nonR6 Strains']
Pruning_thoroughness = data['Pruning']
Initial_Strain = data['Initial Strain']
Degree_centrality_R6cultivars_MayJune = data['degree_centrality_R6_MayJun']
Degree_centrality_nonR6cultivars_MayJune = data['degree_centrality_NonR6_MayJun']
Degree_centrality_R6cultivars_JunJul = data['degree_centrality_R6_JunJul']
Degree_centrality_nonR6cultivars_JunJul = data['degree_centrality_NonR6_JunJul']


df = pd.DataFrame({'Annual Cost': TotalCost,
                   'Active Constituents': YearlyConstituent,
                   'Mean incidence of diseased plants': Mean_incidence_of_diseased_plants,
                   'Mean incidence of diseased plants April': Mean_incidence_of_diseased_plants_Apr,
                   'Mean incidence of diseased plants May': Mean_incidence_of_diseased_plants_May,
                   'Mean incidence of diseased plants June': Mean_incidence_of_diseased_plants_Jun,
                   'Mean incidence of diseased plants July': Mean_incidence_of_diseased_plants_Jul,
                   'Mean incdence of flag Shoot': Mean_incidence_of_Flag_Shoot,
                   'Susceptibility to R6-virulent isolates': Susceptibility_to_R6virulent_isolates,
                   'Susceptibility to non-R6-virulent isolates': Susceptibility_to_nonR6virulent_isolates,
                   'Pruning thoroughness': Pruning_thoroughness,
                   'Initial Strain': Initial_Strain,
                   'Degree centrality R6-cultivars May-June': Degree_centrality_R6cultivars_MayJune,
                   'Degree centrality non-R6-cultivars May-June': Degree_centrality_nonR6cultivars_MayJune,
                   'Degree centrality R6-cultivars June-July': Degree_centrality_R6cultivars_JunJul,
                   'Degree centrality non-R6-cultivars June-July': Degree_centrality_nonR6cultivars_JunJul,
                   })

corr = df.corr(method = 'spearman')
fig, ax = plt.subplots(figsize=(10,10)) 
sns.heatmap(corr, annot = True, fmt=".2f")
fig.autofmt_xdate(rotation=45)
plt.show()

# Result: Figure 3 in Paper (For selected variables)
          Supplemental Figure 1 in Paper (For all variables)
          
